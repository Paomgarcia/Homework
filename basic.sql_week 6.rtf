{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Monaco;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red19\green19\blue28;\red237\green239\blue242;}
{\*\expandedcolortbl;;\cssrgb\c9804\c9804\c14510;\cssrgb\c94510\c94902\c96078;}
\margl1440\margr1440\vieww24580\viewh14740\viewkind0
\deftab720
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Here I enumerated all the columns of the dataset to see all data without using *.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\partightenfactor0

\f1\fs32 \cf2 \expnd0\expndtw0\kerning0
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \kerning1\expnd0\expndtw0 SELECT year,\
       month,\
       month_name,\
       west,\
       midwest,\
       south,\
       northeast\
  FROM tutorial.us_housing_units\
\
Here I renamed all the columns of the dataset to initiate with a capital letter.\
\
SELECT year AS "Year",\
       month AS "Month",\
       month_name AS "Month Name",\
       west AS "West",\
       midwest AS "Midwest",\
       south AS "South",\
       northeast AS "Northeast"\
  FROM tutorial.us_housing_units\
\
Here I set the limit to show the first 15 rows.\
\
SELECT *\
  FROM tutorial.us_housing_units\
  LIMIT 15\
\
\
Here I was looking to see if there were more than 50,000 housing unit per month in the West Region.\
\
SELECT *\
  FROM tutorial.us_housing_units\
 WHERE west > 50\
\
Here I was looking to see if there were fewer than or 20,000 housing unit per month in the South Region.\
\
SELECT *\
  FROM tutorial.us_housing_units\
 WHERE south <= 20\
\
Here I wrote a query that only shows rows for which the month name is February.\
\
SELECT *\
  FROM tutorial.us_housing_units\
 WHERE month_name = 'February'\
\
Here I wrote a query that only shows rows for which the month name starts with the letter \'92N\'92 or an earlier letter in the alphabet.\
\
SELECT *\
  FROM tutorial.us_housing_units\
 WHERE month_name < 'N'\
\
Here I wrote a query that calculates the sum of all four regions in a separate column. \
\
SELECT year,\
       month,\
       west,\
       south,\
       midwest,\
       northeast,\
  west + south + midwest + northeast AS all_regions\
  FROM tutorial.us_housing_units\
\
Here I wrote a query that \cf2 \expnd0\expndtw0\kerning0
returns all rows for which more units were produced in the West region than in the Midwest and Northeast combined.\cf0 \kerning1\expnd0\expndtw0 \
\
SELECT year,\
       month,\
       west,\
       south,\
       midwest,\
       northeast\
  FROM tutorial.us_housing_units\
  WHERE west > (midwest + northeast)\
\
Here I wrote a query that \cf2 \expnd0\expndtw0\kerning0
calculates the percentage of all houses completed in the United States represented by each region. Only return results from the year 2000 and later. \
\
SELECT year,\
       month,\
       west/(west + south + midwest + northeast)*100 AS west_pct,\
       south/(west + south + midwest + northeast)*100 AS south_pct,\
       midwest/(west + south + midwest + northeast)*100 AS midwest_pct,\
       northeast/(west + south + midwest + northeast)*100 AS northeast_pct\
  FROM tutorial.us_housing_units\
 WHERE year >= 2000\
\
\cf0 \kerning1\expnd0\expndtw0 Here I wrote a query that \cf2 \expnd0\expndtw0\kerning0
returns all rows for which Ludacris was a member of the group.\
\
SELECT *\
  FROM tutorial.billboard_top_100_year_end\
 WHERE \'93group\'94 ilike \'91%Ludacris%\'92\
\cf0 \kerning1\expnd0\expndtw0 \
Here I wrote a query that \cf2 \expnd0\expndtw0\kerning0
returns all rows for which the first artist listed in the group has a name that begins with "DJ".\
\
SELECT *\
  FROM tutorial.billboard_top_100_year_end\
 WHERE "group" like 'DJ%'\
\
\cf0 \kerning1\expnd0\expndtw0 Here I wrote a query that \cf2 \expnd0\expndtw0\kerning0
shows all of the entries for Elvis and M.C. Hammer. \
\
\cf0 \kerning1\expnd0\expndtw0 SELECT *\
  FROM tutorial.billboard_top_100_year_end\
 WHERE "group" IN ('M.C. Hammer', 'Hammer', 'Elvis Presley')\
\
Here I wrote a query that \cf2 \expnd0\expndtw0\kerning0
shows all top 100 songs from January 1, 1985 through December 31, 1990.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\partightenfactor0

\f1\fs32 \cf2 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\partightenfactor0

\f0\fs24 \cf2 SELECT *\
  FROM tutorial.billboard_top_100_year_end\
 WHERE year BETWEEN 1985 AND 1990\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\partightenfactor0
\cf0 \kerning1\expnd0\expndtw0 Here I wrote a query that \cf2 \expnd0\expndtw0\kerning0
shows all of the rows for which song_name is null.\
\
SELECT *\
  FROM tutorial.billboard_top_100_year_end\
 WHERE song_name IS NULL\
\
\cf0 \kerning1\expnd0\expndtw0 Here I wrote a query that \cf2 \expnd0\expndtw0\kerning0
shows all of the rows for top-10 hits for which Ludacris is part of the Group.\
\
SELECT *\
  FROM tutorial.billboard_top_100_year_end\
 WHERE year_rank <= 10\
   AND "group" ILIKE '%Ludacris%'\
\
\cf0 \kerning1\expnd0\expndtw0 Here I wrote a query that \cf2 \expnd0\expndtw0\kerning0
surfaces the top-ranked records in 1990, 2000, and 2010.\
\
SELECT *\
  FROM tutorial.billboard_top_100_year_end\
 WHERE year_rank = 1\
   AND year IN (1990, 2000, 2010)\
\
\cf0 \kerning1\expnd0\expndtw0 Here I wrote a query that \cf2 \expnd0\expndtw0\kerning0
lists all songs from the 1960s with "love" in the title.\
\
SELECT *\
  FROM tutorial.billboard_top_100_year_end\
 WHERE song_name ilike '%love%'\
   AND year BETWEEN 1960 AND 1969\
\
\cf0 \kerning1\expnd0\expndtw0 Here I wrote a query that \cf2 \expnd0\expndtw0\kerning0
returns all rows for top-10 songs that featured either Katy Perry or Bon Jovi.\
\
SELECT *\
  FROM tutorial.billboard_top_100_year_end\
 WHERE year_rank <= 10  \
 AND ("group" ILIKE '%katy perry%' OR "group" ILIKE '%bon jovi%')\
\
\cf0 \kerning1\expnd0\expndtw0 Here I wrote a query that \cf2 \expnd0\expndtw0\kerning0
returns all songs with titles that contain the word "California" in either the 1970s or 1990s.\
\
 SELECT *\
      FROM tutorial.billboard_top_100_year_end\
     WHERE song_name ILIKE '%California%'\
      AND (year BETWEEN 1970 AND 1979 OR year BETWEEN 1900 AND 1999)\
\
\cf0 \kerning1\expnd0\expndtw0 Here I wrote a query that \cf2 \expnd0\expndtw0\kerning0
returns all top-100 recordings that feature Dr. Dre before 2001 or after 2009.\
\
 SELECT *\
      FROM tutorial.billboard_top_100_year_end\
     WHERE "group" ILIKE '%dr.dre%' \
      AND (year <= 2001 OR year >= 2010)\
\
\cf0 \kerning1\expnd0\expndtw0 Here I wrote a query that \cf2 \expnd0\expndtw0\kerning0
returns all rows for songs that were on the charts in 2013 and do not contain the letter "a".\
\
SELECT *\
  FROM tutorial.billboard_top_100_year_end\
 WHERE year = 2013\
   AND song_name NOT ILIKE '%a%'\
\
\cf0 \kerning1\expnd0\expndtw0 Here I wrote a query that \cf2 \expnd0\expndtw0\kerning0
returns all rows from 2012, ordered by song title from Z to A.\
\
SELECT *\
  FROM tutorial.billboard_top_100_year_end\
 WHERE year = 2012\
 ORDER BY song_name\
\
\cf0 \kerning1\expnd0\expndtw0 Here I wrote a query that \cf2 \expnd0\expndtw0\kerning0
returns all rows from 2010 ordered by rank, with artists ordered alphabetically for each song.\
\
SELECT *\
  FROM tutorial.billboard_top_100_year_end\
 WHERE year = 2010\
ORDER BY year_rank, artist\
\
\cf0 \kerning1\expnd0\expndtw0 Here I wrote a query that \cf2 \expnd0\expndtw0\kerning0
shows all rows for which T-Pain was a group member, ordered by rank on the charts, from lowest to highest rank (from 100 to 1).\
\
SELECT *\
  FROM tutorial.billboard_top_100_year_end\
 WHERE artist ilike '%T-Pain%'\
ORDER BY year_rank DESC\
\
\cf0 \kerning1\expnd0\expndtw0 Here I wrote a query that \cf2 \expnd0\expndtw0\kerning0
returns songs that ranked between 10 and 20 (inclusive) in 1993, 2003, or 2013. Order the results by year and rank, and leave a comment on each line of the \cb3 WHERE\cb1  clause to indicate what that line does.\
\
SELECT * --selects columns\
  FROM tutorial.billboard_top_100_year_end --names dataset to use\
 WHERE year_rank BETWEEN 10 AND 20 --returns songs ranked between 10 and 20 (inclusive)\
ORDER BY year, year_rank --orders results by year and rank\
\
}